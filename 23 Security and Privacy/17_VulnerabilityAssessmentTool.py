"""
Project 897. Vulnerability Assessment Tool

A vulnerability assessment tool scans systems, services, or codebases for known security weaknesses. In this project, we simulate a basic port and version scanner that checks a list of services against a mock vulnerability database.

What It Simulates:
Checks each running service's version against a database of known vulnerabilities.

Reports CVE-style vulnerabilities for system hardening.

üîç For production use:

Use tools like OpenVAS, Nessus, or Nmap + CVE feeds.

Automate scanning with scheduled cron jobs.

Integrate with patch management and reporting systems.
"""

# Simulated services running on a system
scanned_services = [
    {'Port': 22, 'Service': 'OpenSSH', 'Version': '7.2'},
    {'Port': 80, 'Service': 'Apache', 'Version': '2.4.18'},
    {'Port': 3306, 'Service': 'MySQL', 'Version': '5.5'},
    {'Port': 443, 'Service': 'Nginx', 'Version': '1.18.0'}
]
 
# Simulated vulnerability database (real-world: CVE/NVD feeds)
vulnerability_db = {
    ('OpenSSH', '7.2'): 'CVE-2016-0777: Information leak in roaming feature',
    ('Apache', '2.4.18'): 'CVE-2017-15710: mod_status DoS vulnerability',
    ('MySQL', '5.5'): 'CVE-2016-6662: Remote root code execution vulnerability'
}
 
# Scan report
print("Vulnerability Assessment Report:")
for service in scanned_services:
    key = (service['Service'], service['Version'])
    vuln = vulnerability_db.get(key)
    if vuln:
        print(f"[!] Vulnerability found on port {service['Port']}: {vuln}")
    else:
        print(f"[OK] No known vulnerability for {service['Service']} {service['Version']} on port {service['Port']}")